name: python-tests

on:
  workflow_call:
    inputs:
      python-versions:
        required: true
        type: string
      supported-python-versions:
        required: true
        type: string
      test-script:
        type: string
        default: "tests.py"
      debug:
        type: string
        default: "false"

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Run tests
      run: |
        TEST_RESULTS=/tmp/test-results.txt
        TOTAL_FAILED=0
        TOTAL_SUCCESS=0
        for PYTHON_VERSION in ${{ inputs.python-versions }}; do
            PYTHON_IMAGE=ghcr.io/nzbgetcom/python:$PYTHON_VERSION
            docker pull $PYTHON_IMAGE >/dev/null
            docker run $PYTHON_IMAGE python --version
            docker run -v ./:/tests $PYTHON_IMAGE rm -rf /tests/__/
            docker run -v ./:/tests $PYTHON_IMAGE python /tests/${{ inputs.test-script }} > $TEST_RESULTS 2>&1 || true
            FAILED=$(cat $TEST_RESULTS | grep FAILED | wc -l)
            SUCCESS=$(cat $TEST_RESULTS | grep -e SUCCESS -e OK | wc -l)
            if [ "${{ inputs.debug }}" == "true" ]; then
                cat $TEST_RESULTS
            fi
            printf "SUCCESS: %2s FAILED: %2s\n" $SUCCESS $FAILED
            for SUPPORTED_PYTHON_VERSION in ${{ inputs.supported-python-versions }}; do
                if [ $PYTHON_VERSION == $SUPPORTED_PYTHON_VERSION ]; then
                    TOTAL_FAILED=$((TOTAL_FAILED+$FAILED))
                    TOTAL_SUCCESS=$((TOTAL_SUCCESS+$SUCCESS))
                fi
            done
        done
        rm $TEST_RESULTS

        printf "\nTotals for supported python versions (%s): SUCCESS: %2s FAILED: %2s\n" "${{ inputs.supported-python-versions }}" $TOTAL_SUCCESS $TOTAL_FAILED
        exit $TOTAL_FAILED
